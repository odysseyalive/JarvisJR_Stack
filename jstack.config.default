# JarvisJR Stack - Configuration
# This file contains all configuration for the stack deployment
# 
# IMPORTANT: You MUST customize the DOMAIN and EMAIL variables below
# before running the installation.

# ═══════════════════════════════════════════════════════════════════════════════
# 🔧 REQUIRED CONFIGURATION - YOU MUST MODIFY THESE VALUES
# ═══════════════════════════════════════════════════════════════════════════════

# DOMAIN CONFIGURATION - REQUIRED: Change to your actual domain
DOMAIN="test.example.com"          # ⚠️  CHANGE THIS: Your actual domain name  
EMAIL="admin@test.example.com"    # ⚠️  CHANGE THIS: Your email for SSL certificates
COUNTRY_CODE="US"
STATE_NAME="California"
CITY_NAME="San Francisco"
ORGANIZATION="Your Organization"

# SUBDOMAIN CONFIGURATION
SUPABASE_SUBDOMAIN="supabase"
STUDIO_SUBDOMAIN="studio"
N8N_SUBDOMAIN="n8n"

# ENVIRONMENT CONFIGURATION
DEPLOYMENT_ENVIRONMENT="${DEPLOYMENT_ENVIRONMENT:-production}"
ENABLE_INTERNAL_SSL="${ENABLE_INTERNAL_SSL:-true}"
ENABLE_DEVELOPMENT_MODE="${ENABLE_DEVELOPMENT_MODE:-false}"

# SERVICE USER CONFIGURATION
SERVICE_USER="jarvis"
SERVICE_GROUP="jarvis"
SERVICE_SHELL="/bin/bash"

# DIRECTORY CONFIGURATION
BASE_DIR="/home/${SERVICE_USER}/jarvis-stack"
BACKUP_RETENTION_DAYS="1"
LOG_RETENTION_DAYS="14"
CONFIG_BACKUP_RETENTION="1"

# NETWORK CONFIGURATION
JARVIS_NETWORK="jarvis_network"
PUBLIC_TIER="public_tier"
PRIVATE_TIER="private_tier"

# SERVICE PORTS (Internal Docker networking)
SUPABASE_API_PORT="8000"
SUPABASE_STUDIO_PORT="3000"
N8N_PORT="5678"
NEXTJS_PORT="3001"
POSTGRES_PORT="5432"

# ═══════════════════════════════════════════════════════════════════════════════
# 📊 OPTIMIZED CONTAINER RESOURCE LIMITS
# ═══════════════════════════════════════════════════════════════════════════════

# PostgreSQL/Supabase Database - HIGHEST PRIORITY
POSTGRES_MEMORY_LIMIT="4G"
POSTGRES_CPU_LIMIT="2.0"
POSTGRES_SHARED_BUFFERS="1GB"
POSTGRES_EFFECTIVE_CACHE_SIZE="3GB"
POSTGRES_WORK_MEM="32MB"
POSTGRES_MAINTENANCE_WORK_MEM="256MB"
POSTGRES_MAX_CONNECTIONS="200"

# N8N Workflow Automation
N8N_MEMORY_LIMIT="2G"
N8N_CPU_LIMIT="1.0"
N8N_EXECUTION_TIMEOUT="7200"
N8N_MAX_EXECUTION_HISTORY="50"

# NGINX Reverse Proxy
NGINX_MEMORY_LIMIT="256M"
NGINX_CPU_LIMIT="0.5"
NGINX_WORKER_PROCESSES="auto"
NGINX_WORKER_CONNECTIONS="2048"

# CONTAINER SECURITY CONFIGURATION
APPARMOR_ENABLED="true"
CONTAINER_USER_NAMESPACES="true"
CONTAINER_NO_NEW_PRIVS="true"
CONTAINER_READ_ONLY_ROOT="false"

# FIREWALL CONFIGURATION
UFW_ENABLED="true"

# BACKUP CONFIGURATION
BACKUP_SCHEDULE="0 2 * * 0"
BACKUP_ENCRYPTION="true"
BACKUP_COMPRESSION_LEVEL="6"
DATABASE_BACKUP_RETENTION="1"
VOLUME_BACKUP_RETENTION="1"

# ALERTING CONFIGURATION
ENABLE_ALERTING="true"
ALERT_EMAIL="alerts@${DOMAIN}"
SLACK_WEBHOOK=""

# UPDATE CONFIGURATION
UPDATE_ROLLBACK_ON_FAILURE="true"
PRE_UPDATE_BACKUP="true"
IMAGE_CLEANUP_RETENTION="5"

# ═══════════════════════════════════════════════════════════════════════════════
# 🤖 BROWSER AUTOMATION CONFIGURATION (Debian 12 Headless)
# ═══════════════════════════════════════════════════════════════════════════════

# Chrome/Puppeteer Configuration for Headless Debian 12
ENABLE_BROWSER_AUTOMATION="${ENABLE_BROWSER_AUTOMATION:-true}"
CHROME_MEMORY_LIMIT="4G"
CHROME_CPU_LIMIT="1.5"
CHROME_SWAP_LIMIT="6G"
CHROME_MAX_INSTANCES="5"
CHROME_INSTANCE_TIMEOUT="300"
CHROME_CACHE_SIZE="1G"

# Debian 12 Chrome Installation
CHROME_REPOSITORY="https://dl.google.com/linux/chrome/deb/"
CHROME_PACKAGE="google-chrome-stable"
CHROME_DEPENDENCIES="fonts-liberation libappindicator3-1 libasound2 libatk-bridge2.0-0 libdrm2 libxkbcommon0 libxss1 libgconf-2-4 xdg-utils"

# Headless Chrome Security Arguments (SECURE - no --no-sandbox)
CHROME_SECURITY_ARGS="--disable-dev-shm-usage --disable-gpu --headless=new --disable-extensions --disable-plugins --disable-background-timer-throttling --disable-renderer-backgrounding --disable-default-apps --disable-sync --disable-translate --hide-scrollbars --mute-audio --disable-background-networking"

# Puppeteer Configuration  
PUPPETEER_CACHE_DIR="/home/${SERVICE_USER}/jarvis-stack/puppeteer"
PUPPETEER_EXECUTABLE_PATH="/usr/bin/google-chrome"
PUPPETEER_DOWNLOAD_HOST="https://storage.googleapis.com"
PUPPETEER_SKIP_CHROMIUM_DOWNLOAD="true"

# Browser Automation Resource Management
BROWSER_CLEANUP_INTERVAL="3600"
BROWSER_LOG_LEVEL="error"
BROWSER_SCREENSHOT_QUALITY="80"
BROWSER_PDF_FORMAT="A4"

# N8N CONFIGURATION
N8N_TIMEZONE="America/Los_Angeles"

# SUPABASE CONFIGURATION
SUPABASE_DB_NAME="postgres"
SUPABASE_AUTH_SITE_URL="https://${DOMAIN}"

# NGINX CONFIGURATION
NGINX_CLIENT_MAX_BODY_SIZE="100M"
NGINX_RATE_LIMIT_API="10r/s"
NGINX_RATE_LIMIT_GENERAL="30r/s"
NGINX_RATE_LIMIT_WEBHOOKS="100r/s"
NGINX_KEEPALIVE_TIMEOUT="65"
NGINX_GZIP_COMPRESSION="6"

# LOGGING CONFIGURATION
CONTAINER_LOG_MAX_SIZE="10m"
CONTAINER_LOG_MAX_FILES="5"
AUDIT_LOGGING="true"

# DEBUG CONFIGURATION
ENABLE_DEBUG_LOGS="false"
DRY_RUN="false"